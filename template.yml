AWSTemplateFormatVersion: '2010-09-09'
Transform:
- 'AWS::Serverless-2016-10-31'
- 'AWS::CodeStar'

Description:
  Creates a RESTful API using API Gateway, Lambda and DynamoDB for the Wild Rydes serverless devops workshop

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members
  Environment:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: 'development'

Resources:
  Table:
    Type: 'AWS::Serverless::SimpleTable'
    Properties:
      PrimaryKey:
         Name: name
         Type: String

  ReadFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub 'user-api-read${Environment}'
      Runtime: nodejs6.10
      CodeUri: userapp
      Handler: read.lambda_handler
      Description: View User by name
      Timeout: 10
      Events:
        GET:
          Type: Api
          Properties:
            Path: /users/{name}
            Method: get
      Environment:
        Variables:
          TABLE_NAME: !Ref Table
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]

  ListFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub 'user-api-list${Environment}'
      Runtime: nodejs6.10
      CodeUri: userapp
      Handler: list.lambda_handler
      Description: List Users
      Timeout: 10
      Events:
        GET:
          Type: Api
          Properties:
            Path: /users
            Method: get
      Environment:
        Variables:
          TABLE_NAME: !Ref Table
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]

  UpdateFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub 'user-api-update${Environment}'
      Runtime: nodejs6.10
      CodeUri: userapp
      Handler: update.lambda_handler
      Description: Update User
      Timeout: 10
      Events:
        PUT:
          Type: Api
          Properties:
            Path: /users/{name}
            Method: put
      Environment:
        Variables:
          TABLE_NAME: !Ref Table
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]

  RemoveFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Sub 'user-api-remove${Environment}'
      Runtime: nodejs6.10
      CodeUri: userapp
      Handler: delete.lambda_handler
      Description: Remove User
      Timeout: 10
      Events:
        DELETE:
          Type: Api
          Properties:
            Path: /users/{name}
            Method: delete
      Environment:
        Variables:
          TABLE_NAME: !Ref Table
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
  
  HelloWorld:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs8.10
      Environment:
        Variables:
          NODE_ENV: production
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
        PostEvent:
          Type: Api
          Properties:
            Path: /
            Method: post
  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CodeStar-${ProjectId}-Execution${Environment}'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        -  arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundary'
          